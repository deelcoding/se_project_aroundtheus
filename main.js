!function(){"use strict";class e{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._toggleButtonState()}resetValidation(){this._inputList.forEach((e=>{this._hideError(e)})),this._toggleButtonState()}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}}class t{constructor(e,t,s){this.name=e.name,this.link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__heart").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__trash").addEventListener("click",(()=>{this._handleTrashButton()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleLikeButton(){this._cardElement.querySelector(".card__heart").classList.toggle("card__heart-active")}_handleTrashButton(){this._cardElement.remove(),this._cardElement=null}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageElement=this._cardElement.querySelector(".card__image");const e=this._cardElement.querySelector(".card__title");return this._cardImageElement.src=this.link,this._cardImageElement.alt=this.name,e.textContent=this.name,this._setEventListeners(),this._cardElement}}class s{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(e=>{e.target===this._popup&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._submitCallback=t,this._form=this._popup.querySelector("form"),this._inputs=this._form.querySelectorAll("input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}resetForm(){this._form.reset()}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._submitCallback(t),this.close()})),super.setEventListeners()}}document.querySelectorAll(".modal__close");const r=document.querySelector("#profile__edit"),o=document.querySelector("#profile-edit-modal"),i=(document.querySelector(".profile__name"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),a=document.querySelector("#profile-description-input"),l=o.querySelector("#profile-edit"),c=(document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),u=document.querySelector("#add-card-modal"),d=(document.querySelector("#add-title-input"),document.querySelector("#add-url-input"),u.querySelector("#add-card-form")),m=document.querySelector("#preview-modal"),_=(m.querySelector(".modal__image"),m.querySelector(".modal__caption"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});function h(e){g.open(e.name,e.link),g.setEventListeners()}const p=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=E(e);p.addItem(t)}},".cards__list");function E(e){return new t(e,"#card-template",h).getView()}p.renderItems();const S=new e(_,l),v=new e(_,d);S.enableValidation(),v.enableValidation();const y=new n("#profile-edit-modal",(function(e){const t={name:e.name,job:e.description};b.setUserInfo(t),y.close()}));y.setEventListeners();const f=new n("#add-card-modal",(function(e){const t=E({name:e.title,link:e.url});p.addItem(t),v.disableSubmitButton(),f.close(),f.resetForm()}));f.setEventListeners();const g=new class extends s{constructor(e){super(e),this._imageElement=this._popup.querySelector(".modal__image"),this._captionElement=this._popup.querySelector(".modal__caption")}open(e,t){this._imageElement.src=t,this._imageElement.alt=e,this._captionElement.textContent=e,super.open()}}("#preview-modal");c.addEventListener("click",(()=>f.open())),r.addEventListener("click",(()=>{const e=b.getUserInfo();i.value=e.name,a.value=e.job,y.open()}));const b=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__name",jobSelector:".profile__description"})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,